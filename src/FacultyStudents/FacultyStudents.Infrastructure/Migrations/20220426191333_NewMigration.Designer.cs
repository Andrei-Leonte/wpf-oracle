// <auto-generated />
using FacultyStudents.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace FacultyStudents.Infrastructure.Migrations
{
    [DbContext(typeof(FacultyDBContext))]
    [Migration("20220426191333_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Materia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<short>("NIVEL")
                        .HasColumnType("NUMBER(5)");

                    b.Property<string>("NUME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("Materii", (string)null);
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Nota", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("MATERIAID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<short>("NIVEL")
                        .HasColumnType("NUMBER(5)");

                    b.Property<int>("STUDENTID")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.HasIndex("MATERIAID");

                    b.HasIndex("STUDENTID");

                    b.ToTable("Note", (string)null);
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Specializare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NUME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("Specializari", (string)null);
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.SpecializareMateria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("MaterieId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SpecializareId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.HasIndex("MaterieId");

                    b.HasIndex("SpecializareId");

                    b.ToTable("SpecializareMaterii", (string)null);
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NUME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PRENUME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("SPECIALIZAREID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TELEFON")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.HasIndex("SPECIALIZAREID");

                    b.ToTable("STUDENTI", (string)null);
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Nota", b =>
                {
                    b.HasOne("FacultyStudents.Domain.Entities.Materia", "Materia")
                        .WithMany("Note")
                        .HasForeignKey("MATERIAID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacultyStudents.Domain.Entities.Student", "Student")
                        .WithMany("Note")
                        .HasForeignKey("STUDENTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.SpecializareMateria", b =>
                {
                    b.HasOne("FacultyStudents.Domain.Entities.Materia", "Materie")
                        .WithMany("SpecializareMaterii")
                        .HasForeignKey("MaterieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacultyStudents.Domain.Entities.Specializare", "Specializare")
                        .WithMany("SpecializareMaterii")
                        .HasForeignKey("SpecializareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materie");

                    b.Navigation("Specializare");
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Student", b =>
                {
                    b.HasOne("FacultyStudents.Domain.Entities.Specializare", "Specializare")
                        .WithMany("Studenti")
                        .HasForeignKey("SPECIALIZAREID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specializare");
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Materia", b =>
                {
                    b.Navigation("Note");

                    b.Navigation("SpecializareMaterii");
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Specializare", b =>
                {
                    b.Navigation("SpecializareMaterii");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("FacultyStudents.Domain.Entities.Student", b =>
                {
                    b.Navigation("Note");
                });
#pragma warning restore 612, 618
        }
    }
}
